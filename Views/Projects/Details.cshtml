@model BugHunterBugTrackerZD.Models.Project
@using BugHunterBugTrackerZD.Models.Enums;
@using BugHunterBugTrackerZD.Services.Interfaces

@inject IBTProjectService _ProjectService
@inject IBTRolesService _RolesService

@{
    ViewData["Title"] = "Details";
}



<style>
    .ck-editor__editable_inline {
        min-height: 200px;
    }

    input.largerCheckbox {
        width: 30px;
        height: 30px;
    }

    label.form-check-label {
        font-size: 22px;
    }
</style>




<div class="container-fluid">
    <div class="row gy-3 mb-5">
        @*<div class="col-12">*@
        @*<div class="row">*@
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    @* Project Name *@
                    <h3>@Model.Name</h3>
                    @*<p>@Model.Description</p>*@
                    <div class="progress-container progress-info" style="margin-top:20px;">
                        <span class="progress-badge" style="font-size:small;">Project Status</span>
                        <div class="progress mt-3">
                            @* Razor code block *@
                            @{
                                var start = Model.StartDate;
                                var end = Model.EndDate!.Value;
                                var today = DateTime.Now;
                                var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start!.Value)) / (end.Subtract(start.Value)) * 100);
                            }
                            <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                @* Use Progress Bar code variable here *@
                                <span class="progress-value">@percent%</span>
                            </div>
                        </div>
                    </div>

                    @* if() logic *@
                    @*[Project Active/Inactive]*@
                    <div class="col-12 d-flex flex-row mt-5">
                        <span class="btn btn-primary">Start: @Model.StartDate!.Value.ToString("MM-dd-yy")</span>
                        <span class="btn btn-primary ms-auto">Deadline: @Model.EndDate!.Value.ToString("MM-dd-yy")</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    @* Project Description *@
                    <div class="mb-3">
                        <span class="progress-badge" style="font-size:small;">Project Description</span>
                    </div>
                    <textarea class="editor">@Model.Description</textarea>
                </div>
            </div>
        </div>
        @*</div>*@
        @*</div>*@
    </div>




    <div class="row gy-2">

        <div class="col-md-4">
            <div>
                <h3>Project Manager</h3>
                <hr />
            </div>

            @{
                BTUser? projectManager = await _ProjectService.GetProjectManagerAsync(Model.Id);
            }
            <div class="card">
                <div class="card-body">
                    <div class="d-flex flex-row align-items-center p-2">
                        <span class="me-3"><i class='bx bx-coffee bx-sm'></i></span>
                        <span>@((projectManager?.FullName ?? "Unassigned"))</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div>
                <h3>Project Team</h3>
                <hr />
            </div>
            @foreach (BTUser member in Model.Members)
            {
                @if (!await _RolesService.IsUserInRoleAsync(member, nameof(BTRoles.ProjectManager)))
                {
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex flex-row align-items-center p-2">
                                @if (await _RolesService.IsUserInRoleAsync(member, nameof(BTRoles.Submitter)))
                                {
                                    <span class="me-3"><i class='bx bx-user bx-sm'></i></span>
                                    <span>@((member?.FullName ?? "Unassigned"))</span>

                                }
                                else if (await _RolesService.IsUserInRoleAsync(member, nameof(BTRoles.Developer)))
                                {
                                    <span class="me-3"><i class='bx bx-code bx-sm'></i></span>
                                    <span> @member.FullName</span>
                                }
                            </div>
                        </div>
                    </div>
                }

            }
        </div>
        <div class="col-md-4">
            <div class="">
                <div class="card">
                    <div class="">
                        <h3>Project Activity</h3>
                        <hr />
                    </div>
                    <div class="card-body" style="overflow-y:auto;height:300px;">
                        @* Project Activity loop *@
                        @*[Project Activity  e.g. Ticket History]*@

                        <div class="timeline">
                            <div class="tm-body">
                                @foreach (Ticket ticket in Model.Tickets)
                                {
                                    @foreach (var hList in ticket.History!.GroupBy(h => h.Created.Month))
                                    {
                                        <div class="tm-title">
                                            <h5 class="m-0 pt-2 pb-2 text-dark font-weight-semibold text-uppercase">@(hList.Select(h => h.Created).FirstOrDefault().ToString("MMMM yyyy"))</h5>
                                        </div>
                                        <ol class="tm-items">
                                            @foreach (TicketHistory history in hList)
                                            {
                                                <li>
                                                    <div class="tm-info">
                                                        <div class="tm-icon"><i class="fas fa-star"></i></div>
                                                        <div class="tm-datetime" datetime="@history.Created.ToString("yyyy-MM-dd hh:mm")">
                                                            @{
                                                                DateTime hDate = history.Created;
                                                            }
                                                            <div class="tm-datetime-date">@(((today.Year - hDate.Year) * 12) + today.Month - hDate.Month) months ago</div>
                                                            <div class="tm-datetime-time">@hDate.ToString("hh:mm tt")</div>
                                                        </div>
                                                    </div>
                                                    <div class="tm-box" @*data-appear-animation="fadeInRight" data-appear-animation-delay="100"*@>
                                                        <p>
                                                            @*@history.Description*@
                                                        </p>
                                                        <div class="tm-meta">
                                                            <span>By: <a href="javascript:void(0);" title="@history.User?.FullName">@history.User?.FullName</a></span>

                                                            <div class="msg">

                                                                <p>The ticket <b>@history.PropertyName</b>  was edited</p>

                                                                <p>@($"Previous {history.PropertyName}:  {history.OldValue}")</p>

                                                                <p>@($"Current {history.PropertyName}:  {history.NewValue}")</p>



                                                                <div class="media">

                                                                    @*<img class="media-object rounded width40 mr-3" src="~/assets/images/xs/pngegg-26.png" alt="" />*@

                                                                    <div class="media-body">

                                                                        <h6 class="mb-0"></h6>

                                                                    </div>

                                                                </div>



                                                            </div>
                                                        </div>
                                                    </div>
                                                </li>
                                            }
                                        </ol>
                                    }
                                }



                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>

    </div>

    <div class="row gy-2 mt-5">
        <div class="col-12">
            @*<div class="mt-5 bg-primary">*@
            <div class="card">
                <div class="">
                    <h3 class="fw-bold">Project Tickets</h3>
                </div>
                <div class="card-body">
                    <div class="table-responsive" @*style="overflow-y:auto;height:600px;"*@>
                        <table class="table table-bordered table-striped" id="datatable-default">
                            <thead>
                                <tr>
                                    @* Table header *@
                                    <th>
                                        Title
                                    </th>
                                    <th>
                                        Project
                                    </th>
                                    <th>
                                        Created / Updated
                                    </th>
                                    <th>
                                        Ticket Priority
                                    </th>
                                    <th>
                                        Ticket Type
                                    </th>
                                    <th>
                                        Ticket Status
                                    </th>
                                    <th>
                                        Developer
                                    </th>
                                    <th>
                                        Submitter
                                    </th>
                                    <th>
                                        Actions
                                    </th>

                                </tr>
                            </thead>
                            <tbody>
                                @* Table body *@
                                @foreach (Ticket ticket in Model.Tickets)
                                {
                                    if (ticket.Archived == false)
                                    {
                                        <tr>
                                            <td>
                                                @ticket.Title
                                            </td>
                                            <td>
                                                @ticket.Project!.Name
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => ticket.Created)
                                                @if (ticket.Updated != null)
                                                {
                                                    <span>/</span>  @Html.DisplayFor(modelItem => ticket.Updated)
                                                }
                                            </td>
                                            <td>
                                                @ticket.TicketPriority!.Name
                                            </td>
                                            <td>
                                                @ticket.TicketType!.Name
                                            </td>
                                            <td>
                                                @ticket.TicketStatus!.Name
                                            </td>
                                            <td>
                                                @if (ticket.DeveloperUser == null)
                                                {
                                                    <span class="text-danger">Unassigned</span>
                                                }
                                                else
                                                {
                                                    @ticket.DeveloperUser.FullName
                                                }
                                            </td>
                                            <td>
                                                @ticket.SubmitterUser!.FullName
                                            </td>
                                            <td colspan="2" class="actions-hover actions-fade">
                                                <a asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id"> <i class="fas fa-pencil-alt"></i> </a>
                                                <a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"> <i class='bx bx-detail'></i> </a>
                                                <a asp-action="Delete" asp-controller="Tickets" asp-route-id="@ticket.Id" class="delete-row"> <i class="far fa-trash-alt"></i> </a>
                                            </td>

                                        </tr>
                                    }

                                }
                            </tbody>
                        </table>
                    </div>

                </div>
                @*  </div>*@

            </div>
        </div>
    </div>
</div>


@section scripts {

    <!-- Specific Page Vendor -->
    <script src="~/template/vendor/select2/js/select2.js"></script>
    <script src="~/template/vendor/datatables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/template/vendor/datatables/media/js/dataTables.bootstrap5.min.js"></script>
    <script src="~/template/vendor/datatables/extras/TableTools/Buttons-1.4.2/js/dataTables.buttons.min.js"></script>
    <script src="~/template/vendor/datatables/extras/TableTools/Buttons-1.4.2/js/buttons.bootstrap4.min.js"></script>
    <script src="~/template/vendor/datatables/extras/TableTools/Buttons-1.4.2/js/buttons.html5.min.js"></script>
    <script src="~/template/vendor/datatables/extras/TableTools/Buttons-1.4.2/js/buttons.print.min.js"></script>
    <script src="~/template/vendor/datatables/extras/TableTools/JSZip-2.5.0/jszip.min.js"></script>
    <script src="~/template/vendor/datatables/extras/TableTools/pdfmake-0.1.32/pdfmake.min.js"></script>
    <script src="~/template/vendor/datatables/extras/TableTools/pdfmake-0.1.32/vfs_fonts.js"></script>

    <!-- Examples -->
    <script src="~/template/js/examples/examples.datatables.default.js"></script>
    <script src="~/template/js/examples/examples.datatables.row.with.details.js"></script>
    <script src="~/template/js/examples/examples.datatables.tabletools.js"></script>


    <script src="~/ckeditor5/build/ckeditor.js"></script>

    <script>
        ClassicEditor
            .create(document.querySelector('.editor'), {
                licenseKey: '',
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error('Oops, something went wrong!');
                console.error('Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:');
                console.warn('Build id: xx09iayzufkn-lkt434h3lx2z');
                console.error(error);
            });
    </script>


}                                                       