@using BugHunterBugTrackerZD.Models.Enums
@using Microsoft.AspNetCore.Identity

@inject SignInManager<BTUser> SignInManager
@inject UserManager<BTUser> UserManager

@{
    ViewData["Title"] = "Dashboard";
    @* Instantiate the btUser *@
    BTUser? btUser = await UserManager.GetUserAsync(User);
}

<h1>Dashboard</h1>
<a href="javascript:void(0);">
    @* User Info *@
    [Code: Copy from Ticket/Details]
</a>
@* Get The btUser FullName *@
<strong>[@btUser?.FullName]</strong>
<span class="text-muted" style="font-size:x-small;">
    @* Company Name *@
    <strong>[Show CompanyName]</strong>
</span>


<div>
    <div classxfont-weighteighteightgetainer-fluid">
        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-4 mt-5 bg-secondary">
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h5>Chart 1</h5>
                            <p>[Projects]</p>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h5>Chart 2</h5>
                            <p>[Projects]</p>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h5>Chart 3</h5>
                            <p>[Tickets]</p>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h5>Tickets by Status</h5>
                            <p>[ChartJS]</p>
                            <!-- ChartJS: Pie/Doughnut -->
                            <div class="col-md-12">
                                <!--  Chart.js Canvas Tag -->
                                <canvas id="donutChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row gy-2">
            <div class="cols mt-5 bg-secondary">
                <div class="card col m-1 p-2">
                    <div class="card-body" style="height:380px">
                        <h5>Chart 5</h5>
                        <p>[Projects: Tickets vs Developers]</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="mt-5 ">
        <div class="row">
            @* Projects Table *@
            <div class="col">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Projects</h2>
                        </div>
                        <div class="card-body">
                            @* [Copy and format table from Unassigned Tickets] *@
                        </div>
                        <div class="card-footer">
                        </div>
                    </div>
                </div>
            </div>
            @* Tickets Table *@
            <div class="col">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Tickets</h2>
                        </div>
                        <div class="card-body">

                            @* Copy and format table from Unassigned Tickets *@
                        </div>
                        <div class="card-footer">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 ">
                <div class="bg-dark">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Members</h2>
                            <hr />
                        </div>
                        <div class="card-body" style="overflow-y:auto;height:600px;background-color:antiquewhite">
                            @* Looop over Company members. Display Name and Role *@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*@section Scripts{

    <!-- *** Begin Chart JS Pie/Donut *** -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
    <script>

        var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutData = {
            labels: [
                '@nameof(BTTicketStatuses.Development)',
                '@nameof(BTTicketStatuses.New)',
                '@nameof(BTTicketStatuses.Resolved)',
                '@nameof(BTTicketStatuses.Testing)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets.Where(t=> t.TicketStatus.Name == nameof(BTTicketStatuses.Development)).Count(),
        @Model.Tickets.Where(t=> t.TicketStatus.Name == nameof(BTTicketStatuses.New)).Count(),
        @Model.Tickets.Where(t=> t.TicketStatus.Name == nameof(BTTicketStatuses.Resolved)).Count(),
        @Model.Tickets.Where(t=> t.TicketStatus.Name == nameof(BTTicketStatuses.Testing)).Count()
                            ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        });
    </script>
    <!-- *** End Chart JS Donut *** -->

}
*@
